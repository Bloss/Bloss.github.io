(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{71:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("图中的两种动画有什么区别")]),t._m(1),t._m(2),t._m(3),t._m(4),n("p",[t._v("那如果我们把第一种动画改成下面这样")]),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),n("p",[t._v("那么我们看上面的场景, 第一种动画, 在发生回流操作, 第二种动画只是在重绘, 当然这个场景, 元素是绝对定位, 只会引起自己的\b重绘, 不会引起页面其他部分重新布局.")]),t._m(10),t._m(11),n("p",[t._v("\b"),n("font",{attrs:{color:"#F56C6C"}},[n("strong",[t._v("注意:")])]),t._v(" \b硬件加速的开启也是比较耗性能的, 移动端尤其明显, 当我们开启硬件加速的时候, 最好为元素人为加上较高的 "),n("code",[t._v("z-index")]),t._v(" 属性, \b原因见"),n("a",{attrs:{href:"https://w3ctrain.com/2015/12/15/smoother-animation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://w3ctrain.com/2015/12/15/smoother-animation/")])],1)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#场景","aria-hidden":"true"}},[this._v("#")]),this._v(" 场景")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://blog-1252181333.cossh.myqcloud.com/blog/css-anmiation-carbon.png",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分析","aria-hidden":"true"}},[this._v("#")]),this._v(" \b分析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第一种动画并不会动, \b因为\b "),s("code",[this._v("top")]),this._v(", "),s("code",[this._v("left")]),this._v(" \b值并没有发生变化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第二种动画会动, 因为 "),s("code",[this._v("translate")]),this._v(" 是计算偏移值")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{attrs:{class:"token atrule"}},[n("span",{attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" move")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token selector"}},[t._v("50%")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token property"}},[t._v("top")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token property"}},[t._v("left")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("现在这两种动画还有什么区别呢?\b 哪个性能好?")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们先了解两个概念,"),s("code",[this._v("回流(reflow)")]),s("code",[this._v("重绘(repaint)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("reflow")]),this._v(": \b当元素的几何属性("),s("code",[this._v("height")]),this._v(", "),s("code",[this._v("width")]),this._v(" 等等)发生变化时, 相关元素都会重新渲染, 这个过程叫做回流")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("repaint")]),this._v(": 当元素只需要更新样式属性, 而不影响布局的时候(比如换个背景色), \b页面只会重绘这单个元素, 这个过程叫做重绘")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("\b当我们设计一个动画的时候, 最好使用 "),s("code",[this._v("transform")]),this._v(" 去实现\b, 因为 "),s("code",[this._v("transform")]),this._v(" 不会发生回流, \b我们还可以为此开启硬件加速, \b\b当发生 "),s("code",[this._v("3D")]),this._v(" 转换的时候, 浏览器会开启硬件加速, \b我们可以为此做一个小 trick")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{attrs:{class:"token atrule"}},[n("span",{attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" move")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token selector"}},[t._v("50%")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token property"}},[t._v("transform")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("translate")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100px, 300px, 0"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),n("span",{attrs:{class:"token comment"}},[t._v("/* 引起 3d 变换, 开启硬件加速 */")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])}],!1,null,null,null);s.default=e.exports}}]);